name: "Create Confluence Page"
description: "Creates a release notes page in Confluence."

inputs:
  NODE_VERSION:
    description: "The version of Node to use."
    default: "lts"
  WORKSPACE_ROOT:
    description: "Working Directory"
    required: false
    default: "."
  CONFLUENCE_URL:
    description: "Conflucne Instance URL."
    required: true
  CONFLUENCE_API_URL:
    description: "Conflucne API URL."
    required: true
  CONFLUENCE_API_TOKEN:
    description: "Jira API TOKEN."
    required: true
  CONFLUENCE_SPACE_KEY:
    description: "Conflunece Space in which to create the page."
  CONFLUENCE_PAGE_TITLE:
    description: "Title of the Confluence Page."
    required: true
    default: "$(date '+%y.%m.%d-%T')"
  PAGE_MARKDOWN_SOURCE:
    description: "Markdown source to use for page content. Defaults to basic markdown template included with action. `$(cat markdown.md)` can also be used with a file."
    default: "# Release Summary<br><br>${{ github.event.inputs.JIRA_VERSION_LINK }}<br><br># System Impacts<br.<br>#Release Schedule<br><br># Deployment Steps<br><br>"
  JIRA_VERSION_NAME:
    description: "Jira Version name."
  JIRA_VERSION_LINK:
    description: "A link to the Jira version if included."

outputs:
  CONFLUENCE_PAGE_URL:
    description: "Permalink to the page."
    value: ${{ steps.confluence-page.outputs.CONFLUENCE_PAGE_URL }}

runs:
  using: "composite"
  steps:
    - name: Install Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}

    - name: "Install Dependencies"
      shell: bash
      working-directory: ${{ inputs.WORKSPACE_ROOT }}
      run: |
        npm install

    - name: "Set Vars and Generate HTML"
      shell: bash
      env:
        DEFAULT_TITLE: $(date '+%y.%m.%d-%T')
      working-directory: ${{ inputs.WORKSPACE_ROOT }}
      run: |
        CONFLUENCE_SPACE_RESPONSE=$(curl -s \
          --location "${{ inputs.CONFLUENCE_URL }}/wiki/rest/api/space/${{ inputs.CONFLUENCE_SPACE_KEY }}" \
          --header 'Accept: application/json' \
          --header 'Content-Type: application/json' \
          --header "Authorization: Basic ${{ inputs.CONFLUENCE_API_TOKEN }}")
        JIRA_VERSION_LINK='${{ inputs.JIRA_VERSION_LINK }}'
        MARKDOWN=$(sed "s|\[\[JIRA_VERSION_LINK\]\]|$JIRA_VERSION_LINK|g" release-page-template.md)
        MARKDOWN=$(sed "s|\[\[JIRA_VERSION_NAME\]\]|$JIRA_VERSION_NAME|g" release-page-template.md)
        HTML=$(npm run -s marked -- "$MARKDOWN")
        TRIMMED_HTML=$(echo "$HTML" | tr -d '\n')
        echo "CONFLUENCE_SPACE_ID=$(echo $CONFLUENCE_SPACE_RESPONSE | jq -r '.id')" >>$GITHUB_ENV
        echo "PAGE_BODY=$TRIMMED_HTML" >>$GITHUB_ENV
        echo "CONFLUENCE_URL=${{ inputs.CONFLUENCE_URL }}" >>$GITHUB_ENV
        echo "CONFLUENCE_API_URL=${{ inputs.CONFLUENCE_API_URL }}" >>$GITHUB_ENV
        echo "CONFLUENCE_API_TOKEN=${{ inputs.CONFLUENCE_API_TOKEN }}" >>$GITHUB_ENV
        echo "CONFLUENCE_SPACE_KEY=${{ inputs.CONFLUENCE_SPACE_KEY }}" >>$GITHUB_ENV
        echo "CONFLUENCE_PAGE_TITLE=${{ inputs.CONFLUENCE_PAGE_TITLE || env.DEFAULT_TITLE }}" >>$GITHUB_ENV

    - name: "Create Page"
      id: confluence-page
      shell: bash
      env:
        PAYLOAD_BODY: >
          {
            "type": "long",
            "title": "${{ env.CONFLUENCE_PAGE_TITLE }}",
            "space": {
                "key": "${{ env.CONFLUENCE_SPACE_KEY }}"
            },
            "spaceId": ${{ env.CONFLUENCE_SPACE_ID }},
            "body": {
                "storage": {
                    "value": ${{ toJSON(env.PAGE_BODY) }},
                    "representation": "storage"
                }
            }
          }
      run: |
        RESPONSE=$(curl -s -X POST "${{ env.CONFLUENCE_URL }}/wiki/api/v2/pages" \
          -H 'Accept: application/json' \
          -H 'Content-Type: application/json' \
          -H "Authorization: Basic ${{ env.CONFLUENCE_API_TOKEN }}" \
          -d "$PAYLOAD_BODY")
        PAGE_EDIT_URL=$(echo "$RESPONSE" | jq -r '._links.editui')
        PAGE_PERMALINK_URL=$(echo "$RESPONSE" | jq -r '._links.tinyui')
        PAGE_LONG_URL=$(echo "$RESPONSE" | jq -r '._links.webui')
        echo "CONFLUENCE_PAGE_URL=${{ inputs.CONFLUENCE_URL }}/wiki${PAGE_PERMALINK_URL}" >>$GITHUB_OUTPUT

        echo "# Release Page" >>$GITHUB_STEP_SUMMARY
        echo "## ${{ env.CONFLUENCE_PAGE_TITLE }}" >>$GITHUB_STEP_SUMMARY
        echo "<a href=\"${{ env.CONFLUENCE_URL }}/wiki${PAGE_LONG_URL}\">VIEW</a> the Release Page." >>$GITHUB_STEP_SUMMARY
        echo "<a href=\"${{ env.CONFLUENCE_URL }}/wiki${PAGE_EDIT_URL}\">Edit</a> the Release Page." >>$GITHUB_STEP_SUMMARY
        echo "## Share the Release Page:" >>$GITHUB_STEP_SUMMARY
        echo '```' >>$GITHUB_STEP_SUMMARY
        echo "${{ env.CONFLUENCE_URL }}${PAGE_PERMALINK_URL}" >>$GITHUB_STEP_SUMMARY
        echo '```' >>$GITHUB_STEP_SUMMARY
